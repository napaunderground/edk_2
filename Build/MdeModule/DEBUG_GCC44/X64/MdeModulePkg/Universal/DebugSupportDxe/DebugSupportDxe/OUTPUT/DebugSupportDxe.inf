## @file
# This driver installs Debug Support protocol for the selected processor.
#
# This driver provides the capabilities for debug-agent to gain control of the machine
# when certain types of events occur, i.e. breakpoint, processor execptions, etc. It also
# provides debug-agent to periodically gain control during operation of the machine to
# check for asynchronous commands form the host.
#
# Copyright (c) 2006 - 2014, Intel Corporation. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution. The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = DebugSupportDxe
  FILE_GUID                  = 911D584C-35F7-4955-BEF9-B452769DDC3A
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = InitializeDebugSupportDriver
  MODULE_UNI_FILE            = DebugSupportDxe.uni

[Packages.X64]
  MdePkg/MdePkg.dec

[Binaries.X64]
  PE32|DebugSupportDxe.efi
  DXE_DEPEX|DebugSupportDxe.depex

[PatchPcd.X64]

[Protocols.X64]
  ## SOMETIMES_CONSUMES
  ## CONSUMES
  gEfiLoadedImageProtocolGuid

  ## PRODUCES
  gEfiDebugSupportProtocolGuid


[Ppis.X64]

[Guids.X64]

[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf

[Depex.X64]
#  (TRUE) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:DEBUG_GCC44_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC44_X64_ASLDLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x20 --entry ReferenceAcpiTable -u ReferenceAcpiTable -m elf_x86_64
##   GCC:DEBUG_GCC44_X64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC44_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC44_X64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC44_X64_RC_FLAGS = -I binary -O elf64-x86-64        -B i386    --rename-section .data=.hii
##   GCC:DEBUG_GCC44_X64_ASM_FLAGS = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -m64 --64 -melf_x86_64
##   GCC:DEBUG_GCC44_X64_ASL_FLAGS = 
##   GCC:DEBUG_GCC44_X64_CC_FLAGS = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -DNO_BUILTIN_VA_FUNCS -mno-red-zone -Wno-address -mcmodel=large -fno-asynchronous-unwind-tables
##   GCC:DEBUG_GCC44_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC44_X64_ASLCC_FLAGS = -x c -m64
##   GCC:DEBUG_GCC44_X64_DLINK2_FLAGS = --defsym=PECOFF_HEADER_SIZE=0x228 --script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds
##   GCC:DEBUG_GCC44_X64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC44_X64_DLINK_FLAGS = -nostdlib -n -q --gc-sections -z common-page-size=0x20 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map  -melf_x86_64 --oformat=elf64-x86-64
##   GCC:DEBUG_GCC44_X64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC44_X64_ASLPP_FLAGS = -x c -E -P
##   GCC:DEBUG_GCC44_X64_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC44_X64_APP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC44_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC44_X64_NASM_FLAGS = -f elf64
